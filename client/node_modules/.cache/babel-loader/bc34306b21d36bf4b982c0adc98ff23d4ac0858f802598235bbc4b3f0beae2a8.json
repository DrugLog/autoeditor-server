{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\autoedit-server\\\\client\\\\src\\\\App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport React, { Component } from 'react';\nimport { Helmet } from 'react-helmet';\nimport axios from 'axios';\n// import 'SpotifyAPIHandler.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.onFileChange = event => {\n      this.setState({\n        selectedFiles: event.target.files\n      });\n    };\n    this.onFileUpload = async () => {\n      const formData = new FormData();\n      var newFileList = [];\n      console.log('length: ', this.state.selectedFiles.length);\n\n      // for(var i = 0; i < this.state.selectedFiles.length; i++){\n      //   var tempFile = this.state.selectedFiles[i];\n      //   // var tempFileData = {\n      //   //   'name': tempFile.name,\n      //   //   'data': tempFile.data,\n      //   //   'size': tempFile.size,\n      //   //   'mv': Function(tempFile.mv),\n      //   // }\n\n      //   // console.log('tempFileData: ', tempFileData);\n      //   console.log('tempFile(',i, '):', tempFile);\n      //   newFileList.push(tempFile);\n      // }\n\n      // console.log('newFileList: ', newFileList);\n\n      for (var i = 0; i < this.state.selectedFiles.length; i++) {\n        formData.append('FileList', this.state.selectedFiles[i]);\n      }\n\n      // console.log('this.state.selectedFiles[0]: ', this.state.selectedFiles[0]);\n      // formData.append('fileName', this.state.selectedFile.name);\n\n      console.log('details of the uploaded file: ', this.state.selectedFiles);\n      // console.log('formData: ', formData);\n\n      // axios.post(\"/files\", formData);\n\n      // const response = fetch('http://localhost:5000/files', {\n      //   method: 'POST',\n      //   headers: {\n      //     // 'Accept': 'application/json',\n      //     'content-Type': 'multipart/form-data',\n      //     // 'Content-Type': 'file.type',\n      //   },\n      //   body: formData,\n      // })\n      // .then(res => console.log(res))\n      // .then(data => console.log('Success: ', data))\n      // .catch(error => console.log('Error: ', error));\n\n      const config = {\n        headers: {\n          'content-type': 'multipart/form-data'\n        }\n      };\n      await axios.post('http://localhost:5000/files', formData, config).then(response => {\n        console.log('response: ', response.data);\n      }).catch(error => console.log('error: ', error));\n      // console.log('response: ', response);\n    };\n    this.fileData = () => {\n      if (this.state.selectedFile) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"File Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" File Name: \", this.state.selectedFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Type: \", this.state.selectedFile.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last Modified: \", \" \", this.state.selectedFile.lastModifiedDate.toDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Choose before Pressing the Upload button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this);\n      }\n    };\n    this.state = {\n      data_sent: false,\n      video_files: '',\n      spotify_url: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  asynccomponentDidMount() {\n    console.log('component mounted');\n  }\n  handleChange(e) {\n    console.log('handleChange: ', e);\n    if (e.target.type == \"file\") {\n      this.setState({\n        [e.target.name]: e.target.files\n      }, () => console.log('new state: ', this.state));\n      this.setState({\n        selectedFiles: e.target.files\n      }, () => console.log('new state: ', this.state));\n    } else {\n      this.setState({\n        [e.target.name]: e.target.value\n      }, () => console.log('new state: ', this.state));\n    }\n\n    // this.setState({});\n  }\n\n  async handleSubmit(e) {\n    console.log('handleSubmit: ', e);\n    e.preventDefault();\n    if (e.target.name == \"submit_button\") {\n      var result = await hitCreateVideo(this.state);\n      if (result == 0) {\n        console.log('Success.');\n        this.setState({\n          data_sent: true\n        }, () => console.log('new state: ', this.state));\n        return;\n      } else if (result == 1) {\n        console.log('Empty field');\n        return;\n      } else if (result == 2) {\n        console.log('Only one file was selected. Select at least one more');\n        return;\n      }\n      await testUploadVideo(this.state.video_files);\n      this.onFileUpload();\n    }\n  }\n  render() {\n    //   const response = fetch('http://localhost:5000/api', {\n    //     method: 'POST',\n    //     headers: {\n    //       'Content-Type': 'application/json'\n    //     },\n    //     body: JSON.stringify(this.state),\n    // })\n    //   .then(res => res.json())\n    //   .then(data => console.log(data))\n    //   .catch(error => console.log('Error: ', error))\n\n    //   var {data_sent, video_files, spotify_url} = this.state;\n    //   // console.log('current state: ', this.state);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Helmet, {\n        children: /*#__PURE__*/_jsxDEV(\"style\", {\n          children: 'body { background-color: #292b2c; }'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col d-flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card rounded-3 border-3 shadow-lg p-4 m-4 w-40\",\n          style: {\n            width: '18rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body shadow-lg\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"input\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                children: [\"Enter spotify song URL:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"spotify_url\",\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 13\n                }, this), \"Upload video files:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  multiple: true,\n                  accept: \"image/png, image/jpg, video/mp4\",\n                  name: \"video_files\",\n                  onChange: this.handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  name: \"submit_button\",\n                  onClick: this.handleSubmit,\n                  children: \"Upload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this);\n  }\n}\nasync function testUploadVideo(tempFile) {\n  console.log('testUploadVideo with tempFile: ', tempFile);\n  let formData = new FormData();\n  formData.append('File', tempFile, tempFile.name);\n  console.log('tempFile.name: ', tempFile.name);\n  console.log('formData: ', formData);\n\n  // const testResponse = await fetch('http://localhost:5000/files', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Accept': 'application/json',\n  //       'Content-Type': 'multipart/form-data',\n  //     },\n  //     body: formData,\n  // })\n  //   .then(res => res.json())\n  //   .then(data => console.log('Success: ', data))\n  //   .catch(error => console.log('Error: ', error))\n\n  // console.log('testResponse: ', testResponse);\n\n  axios.post(\"http://localhost:5000/files\", formData);\n}\nasync function hitCreateVideo(state) {\n  console.log('hitCreateVideo with state\" ', state);\n  var {\n    data_sent,\n    video_files,\n    spotify_url\n  } = state;\n  if (video_files == '' || spotify_url == '') {\n    return 1;\n  }\n  if (video_files.length < 2) {\n    return 2;\n  }\n  const response = await fetch('http://localhost:5000/api', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(state)\n  }).then(res => res.json()).then(data => console.log(data)).catch(error => console.log('Error: ', error));\n  // console.log('response: ', res.);\n  // return response;\n\n  return 0;\n}\nexport default App;","map":{"version":3,"names":["logo","useState","useEffect","React","Component","Helmet","axios","App","constructor","props","onFileChange","event","setState","selectedFiles","target","files","onFileUpload","formData","FormData","newFileList","console","log","state","length","i","append","config","headers","post","then","response","data","catch","error","fileData","selectedFile","name","type","lastModifiedDate","toDateString","data_sent","video_files","spotify_url","handleChange","bind","handleSubmit","asynccomponentDidMount","e","value","preventDefault","result","hitCreateVideo","testUploadVideo","render","width","tempFile","fetch","method","body","JSON","stringify","res","json"],"sources":["C:/Projects/autoedit-server/client/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from 'react'; \nimport React, { Component} from 'react';\nimport {Helmet} from 'react-helmet'\nimport axios from 'axios';\n// import 'SpotifyAPIHandler.js';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      data_sent: false,\n      video_files: '',\n      spotify_url: '',\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  asynccomponentDidMount(){\n\n    console.log('component mounted');\n\n  }\n\n  onFileChange = event => {\n    this.setState({selectedFiles: event.target.files});\n  }\n\n  onFileUpload = async () => {\n    const formData = new FormData();\n\n    var newFileList = [];\n\n    console.log('length: ', this.state.selectedFiles.length);\n\n    // for(var i = 0; i < this.state.selectedFiles.length; i++){\n    //   var tempFile = this.state.selectedFiles[i];\n    //   // var tempFileData = {\n    //   //   'name': tempFile.name,\n    //   //   'data': tempFile.data,\n    //   //   'size': tempFile.size,\n    //   //   'mv': Function(tempFile.mv),\n    //   // }\n\n    //   // console.log('tempFileData: ', tempFileData);\n    //   console.log('tempFile(',i, '):', tempFile);\n    //   newFileList.push(tempFile);\n    // }\n\n    // console.log('newFileList: ', newFileList);\n\n    for(var i = 0; i < this.state.selectedFiles.length; i++){\n      formData.append('FileList', this.state.selectedFiles[i]);\n    }\n\n    // console.log('this.state.selectedFiles[0]: ', this.state.selectedFiles[0]);\n    // formData.append('fileName', this.state.selectedFile.name);\n\n    console.log('details of the uploaded file: ', this.state.selectedFiles);\n    // console.log('formData: ', formData);\n\n    // axios.post(\"/files\", formData);\n\n    // const response = fetch('http://localhost:5000/files', {\n    //   method: 'POST',\n    //   headers: {\n    //     // 'Accept': 'application/json',\n    //     'content-Type': 'multipart/form-data',\n    //     // 'Content-Type': 'file.type',\n    //   },\n    //   body: formData,\n    // })\n    // .then(res => console.log(res))\n    // .then(data => console.log('Success: ', data))\n    // .catch(error => console.log('Error: ', error));\n\n    const config = {\n\n      headers: {\n\n        'content-type': 'multipart/form-data',\n\n      },\n\n    };\n\n    await axios.post('http://localhost:5000/files', formData, config)\n    .then((response) => {\n      console.log('response: ', response.data);\n    })\n    .catch(error => console.log('error: ', error))\n    // console.log('response: ', response);\n\n  }\n\n  fileData = () => {\n    if(this.state.selectedFile){\n      return (\n        <div>\n          <h2>File Details:</h2>\n          <p> File Name: {this.state.selectedFile.name}</p>\n          <p>File Type: {this.state.selectedFile.type}</p>\n          <p>\n            Last Modified: {\" \"}\n            {this.state.selectedFile.lastModifiedDate.toDateString()}\n          </p>\n\n        </div>\n      );\n    } else {\n      return(\n        <div>\n          <br />\n          <h4>Choose before Pressing the Upload button</h4>\n        </div>\n      );\n    }\n  }\n\n  handleChange(e) {\n    console.log('handleChange: ', e);\n\n    if(e.target.type == \"file\"){\n      this.setState({[e.target.name]: e.target.files}, () => console.log('new state: ', this.state));\n      this.setState({selectedFiles: e.target.files}, () => console.log('new state: ', this.state))\n    } else {\n      this.setState({[e.target.name]: e.target.value}, () => console.log('new state: ', this.state));\n    }\n\n    \n    // this.setState({});\n}\n\n  async handleSubmit(e) {\n    console.log('handleSubmit: ', e);\n    e.preventDefault();\n\n    if(e.target.name == \"submit_button\"){\n      var result = await hitCreateVideo(this.state);\n\n      if(result == 0){\n        console.log('Success.');\n        this.setState({data_sent: true}, () => console.log('new state: ', this.state));\n        return;\n      } else if(result == 1){\n        console.log('Empty field');\n        return;\n      } else if(result == 2){\n        console.log('Only one file was selected. Select at least one more');\n        return;\n      }\n      \n      await testUploadVideo(this.state.video_files);\n      this.onFileUpload();\n    }\n  }\n\n  render(){\n\n    \n  //   const response = fetch('http://localhost:5000/api', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json'\n  //     },\n  //     body: JSON.stringify(this.state),\n  // })\n  //   .then(res => res.json())\n  //   .then(data => console.log(data))\n  //   .catch(error => console.log('Error: ', error))\n\n  //   var {data_sent, video_files, spotify_url} = this.state;\n  //   // console.log('current state: ', this.state);\n\n    return (\n      <div className=\"App\">\n        <Helmet>\n          <style>{'body { background-color: #292b2c; }'}</style>\n        </Helmet> \n        <div className=\"col d-flex justify-content-center\">\n          <div className=\"card rounded-3 border-3 shadow-lg p-4 m-4 w-40\" style={{width: '18rem'}}>\n          <div className=\"card-body shadow-lg\">\n        <div id=\"input\">\n          {/* <form action=\"/api\" method=\"POST\"> */}\n          <form>\n            Enter spotify song URL: \n            <input type=\"text\" name = \"spotify_url\" onChange={this.handleChange}></input>\n            Upload video files: \n            <input type=\"file\" multiple accept='image/png, image/jpg, video/mp4' name = \"video_files\" onChange={this.handleChange}></input>\n            {/* <button className=\"btn btn-primary\" type=\"submit\" name = \"submit_button\" onClick={this.handleSubmit}>Create Video</button> */}\n            {/* <input type=\"file\" onChange={this.onFileChange} /> */}\n            {/* <button className=\"btn btn-primary\" type=\"submit\" name = \"submit_button\" onClick={this.onFileUpload}>Create Video</button> */}\n            {/* <input type=\"file\" onChange={this.handleChange}/> */}\n            <button type=\"submit\" name=\"submit_button\" onClick={this.handleSubmit}>Upload</button>\n          </form>\n        </div>\n        </div>\n        {/* {this.fileData()} */}\n        </div>\n        </div>\n        \n          \n      </div>\n\n      \n\n    );\n\n\n  }\n\n  \n}\n\nasync function testUploadVideo(tempFile){\n  console.log('testUploadVideo with tempFile: ', tempFile);\n\n  let formData = new FormData();\n  formData.append('File', tempFile, tempFile.name);\n\n  console.log('tempFile.name: ', tempFile.name);\n\n  console.log('formData: ', formData);\n\n  // const testResponse = await fetch('http://localhost:5000/files', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Accept': 'application/json',\n  //       'Content-Type': 'multipart/form-data',\n  //     },\n  //     body: formData,\n  // })\n  //   .then(res => res.json())\n  //   .then(data => console.log('Success: ', data))\n  //   .catch(error => console.log('Error: ', error))\n\n  // console.log('testResponse: ', testResponse);\n\n  axios.post(\"http://localhost:5000/files\", formData);\n\n}\n\nasync function hitCreateVideo(state){\n\n  \n  console.log('hitCreateVideo with state\" ', state);\n\n  var {data_sent, video_files, spotify_url} = state;\n\n  if(video_files == '' || spotify_url == ''){\n    return 1;\n  }\n\n  if(video_files.length < 2){\n    return 2;\n  }\n\n  const response = await fetch('http://localhost:5000/api', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(state),\n  })\n    .then(res => res.json())\n    .then(data => console.log(data))\n    .catch(error => console.log('Error: ', error))\n    // console.log('response: ', res.);\n    // return response;\n\n  return 0;\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}