{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\autoedit-server\\\\client\\\\src\\\\App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data_sent: false,\n      video_files: [],\n      spotify_url: undefined\n    };\n  }\n  componentDidMount() {\n    console.log('component mounted');\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"input\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"localhost:5000/api\",\n          method: \"POST\",\n          children: [\"Enter spotify song URL:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"spotify_link_entry\",\n            onChange: name => this.setState({\n              spotify_url: name.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }, this), \"Upload video files:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"file_entry\",\n            onChange: name => this.setState({\n              video_files: name.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            type: \"submit\",\n            children: \"Create Video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n}\nasync function hitCreateVideo(spotifyURL, videoFiles) {\n  const response = await fetch('http://localhost:5000/api', {}).then(res => res.json()).then(data => console.log(data)).catch(error => console.log('Error: ', error));\n  console.log('response: ', response);\n  return response;\n}\nexport default App;","map":{"version":3,"names":["logo","useState","useEffect","React","Component","App","constructor","props","state","data_sent","video_files","spotify_url","undefined","componentDidMount","console","log","render","name","setState","value","hitCreateVideo","spotifyURL","videoFiles","response","fetch","then","res","json","data","catch","error"],"sources":["C:/Projects/autoedit-server/client/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from 'react'; \nimport React, { Component} from 'react';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      data_sent: false,\n      video_files: [],\n      spotify_url: undefined,\n    }\n  }\n\n  componentDidMount(){\n\n    console.log('component mounted');\n\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <div id=\"input\">\n          <form action=\"localhost:5000/api\" method=\"POST\">\n          Enter spotify song URL: \n          <input type=\"text\" name = \"spotify_link_entry\" onChange={name => this.setState({spotify_url: name.value})}></input>\n          Upload video files: \n          <input type=\"file\" name = \"file_entry\" onChange={name => this.setState({video_files: name.value})}></input>\n          <button className=\"btn btn-primary\" type=\"submit\">Create Video</button>\n          </form>\n        </div>\n          \n      </div>\n    );\n  }\n\n  \n}\n\nasync function hitCreateVideo(spotifyURL, videoFiles){\n  const response = await fetch('http://localhost:5000/api', {\n\n  })\n    .then(res => res.json())\n    .then(data => console.log(data))\n    .catch(error => console.log('Error: ', error))\n    console.log('response: ', response);\n    return response;\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,IAAIC,SAAS,QAAO,OAAO;AAAC;AAExC,MAAMC,GAAG,SAASD,SAAS,CAAC;EAE1BE,WAAW,CAACC,KAAK,EAAC;IAChB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACXC,SAAS,EAAE,KAAK;MAChBC,WAAW,EAAE,EAAE;MACfC,WAAW,EAAEC;IACf,CAAC;EACH;EAEAC,iBAAiB,GAAE;IAEjBC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EAElC;EAEAC,MAAM,GAAE;IACN,oBACE;MAAK,SAAS,EAAC,KAAK;MAAA,uBAClB;QAAK,EAAE,EAAC,OAAO;QAAA,uBACb;UAAM,MAAM,EAAC,oBAAoB;UAAC,MAAM,EAAC,MAAM;UAAA,WAAC,yBAEhD;YAAO,IAAI,EAAC,MAAM;YAAC,IAAI,EAAG,oBAAoB;YAAC,QAAQ,EAAEC,IAAI,IAAI,IAAI,CAACC,QAAQ,CAAC;cAACP,WAAW,EAAEM,IAAI,CAACE;YAAK,CAAC;UAAE;YAAA;YAAA;YAAA;UAAA,QAAS,uBAEnH;YAAO,IAAI,EAAC,MAAM;YAAC,IAAI,EAAG,YAAY;YAAC,QAAQ,EAAEF,IAAI,IAAI,IAAI,CAACC,QAAQ,CAAC;cAACR,WAAW,EAAEO,IAAI,CAACE;YAAK,CAAC;UAAE;YAAA;YAAA;YAAA;UAAA,QAAS,eAC3G;YAAQ,SAAS,EAAC,iBAAiB;YAAC,IAAI,EAAC,QAAQ;YAAA,UAAC;UAAY;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;UAAA;UAAA;UAAA;QAAA;MAChE;QAAA;QAAA;QAAA;MAAA;IACH;MAAA;MAAA;MAAA;IAAA,QAEF;EAEV;AAGF;AAEA,eAAeC,cAAc,CAACC,UAAU,EAAEC,UAAU,EAAC;EACnD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2BAA2B,EAAE,CAE1D,CAAC,CAAC,CACCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAId,OAAO,CAACC,GAAG,CAACa,IAAI,CAAC,CAAC,CAC/BC,KAAK,CAACC,KAAK,IAAIhB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEe,KAAK,CAAC,CAAC;EAC9ChB,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEQ,QAAQ,CAAC;EACnC,OAAOA,QAAQ;AACnB;AAEA,eAAelB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}